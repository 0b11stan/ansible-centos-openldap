---
- hosts: all

  handlers:
    - name: ssh server is restarted
      service:
        name: sshd
        state: restarted

  tasks:
    # CENTOS
    - name: all packages are up to date
      yum:
        name: '*'
        state: latest

    - name: initial packages are installed
      package:
        name: vim
    
    - name: root have a strong password
      user:
        name: root
        password: "{{ root_hash_pass }}"

    - name: hostname is changed
      hostname:
        name: ldap-srv

    - name: firewalld is disable
      service:
        name: firewalld
        enabled: false
        state: stopped

    - name: iptables rules are restored on startup
      cron:
        name: configure iptables
        reboot: true
        job: /sbin/iptables-restore < /etc/sysconfig/iptables

    - name: iptables export is copied
      copy:
        src: export-iptables
        dest: /etc/sysconfig/iptables

    - name: configure ssh
      template:
        src: sshd_config
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0600
      notify: ssh server is restarted

    # add user manager
    # add it to sshuser group
    #
    # TODO : ajouter rÃ¨gles sortantes http https et ntp

    # OPENLDAP
    - name: required packages are installed
      package:
        name:
          - openldap
          - compat-openldap
          - openldap-servers
          - openldap-servers-sql
          - openldap-clients
          - openldap-devel
          - python-ldap

    - name: initial ldif file is copied
      template:
        src: slapd.ldif
        dest: /etc/openldap/slapd.ldif
        owner: ldap
        group: ldap
        mode: 0640
      register: ldif_copy

    - name: default ldap database is destroyed
      file:
        name: /etc/openldap/slapd.d
        state: absent
      when: ldif_copy.changed

    - name: ldap database directory exist
      file:
        name: /etc/openldap/slapd.d
        state: directory
        owner: ldap
        group: ldap
        mode: 0750

    - name: ldap database is generated
      become: true
      become_user: ldap
      command: slapadd -n 0 -F /etc/openldap/slapd.d -l /etc/openldap/slapd.ldif
      args:
        creates: /etc/openldap/slapd.d/cn=config.ldif
      register: database_generation

    - name: slapd service is started
      service:
        name: slapd
        enabled: true
        state: restarted
      when: database_generation.changed or ldif_copy.changed

    - name: ldap has a root organization
      ldap_entry:
        bind_dn: cn=Manager,dc=epsi,dc=intra
        bind_pw: "{{ ldap_root_secret }}"
        dn: dc=epsi,dc=intra
        objectClass:
          - dcObject
          - organization
        attributes:
          o: EPSI
          dc: epsi

    - name: ldap has a Manager role
      ldap_entry:
        bind_dn: cn=Manager,dc=epsi,dc=intra
        bind_pw: "{{ ldap_root_secret }}"
        dn: cn=Manager,dc=epsi,dc=intra
        objectClass: organizationalRole
        attributes:
          cn: Manager

    - name: make sure we have a parent entry for users
      ldap_entry:
        bind_dn: cn=Manager,dc=epsi,dc=intra
        bind_pw: "{{ ldap_root_secret }}"
        dn: ou=users,dc=epsi,dc=intra
        objectClass: organizationalUnit

    - name: ldap has a User Tux
      ldap_entry:
        bind_dn: cn=Manager,dc=epsi,dc=intra
        bind_pw: "{{ ldap_root_secret }}"
        dn: cn=tux,ou=users,dc=epsi,dc=intra
        objectClass: person
        attributes:
          cn: Tux
          sn: Tuz

    - name: ldap password is set for Tux
      ldap_passwd:
        bind_dn: cn=Manager,dc=epsi,dc=intra
        bind_pw: "{{ ldap_root_secret }}"
        dn: cn=tux,ou=users,dc=epsi,dc=intra
        passwd: okpass
